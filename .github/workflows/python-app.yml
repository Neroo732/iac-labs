# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  job1:
  
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app
    steps:
       - uses: actions/checkout@v3
       - name: Set up Python 3.10
         uses: actions/setup-python@v3
         with:
            python-version: "3.10" 

  job:
       needs: job1
       runs-on: ubuntu-latest   
       steps:
           - name: Install Poetry Action
             uses: snok/install-poetry@v1.3.4
             with:
                virtualenvs-create: true
                virtualenvs-in-project: false
                installer-parallel: true
           - name: Install dep
             run: |
                     poetry install --no-root 

           - name: Cache build venv
             id: cached-poetry-dependencies
             uses: actions/cache@v3
             with:
              path: /home/runner/work/<path>/example-app/.venv
              key: ${{ runner.os }}-venv
  job2:
      runs-on: ubuntu-latest
      needs: job1
      steps:
        - name: Poetry Test 
          run: |
               poetry run task test
  job3: 
      runs-on: ubuntu-latest
      needs: job2  
      steps:
       - name: Poetry lint 
         run: |
              poetry run task lint 
  job4:
      runs-on: ubuntu-latest
      needs: job
      steps:
       - name: Poetry fromatter 
         run: |
              poetry run task formatter
  job5:
      runs-on: ubuntu-latest
      needs: job4 
      steps:
      - name: Poetry security  
        run: |
             poetry run task security   
    
  

        
         
